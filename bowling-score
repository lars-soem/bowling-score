#!/usr/bin/perl

# Copyright (C) 2016 Lars Hansen <lh@soem.dk>
# 
# Author: Lars Hansen <lh@soem.dk>
# 
# License:
# 
#   This package is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#   
#   This package is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU General Public License for more details.
#   
#   The GNU General Public License may be found at <http://www.gnu.org/licenses/>.
# 
# On Debian systems, the complete text of the GNU General
# Public License version 3 can be found in "/usr/share/common-licenses/GPL-3".

use strict;
use warnings;
use Mojo::JSON qw(encode_json);
use Mojo::Log;
use Mojo::UserAgent;
use FindBin;
use lib "$FindBin::Bin";
use ScoreList;

sub list_text {
   my ($label, $list) = @_;
   return sprintf('%s: %s (length %i)', $label, encode_json($list), scalar(@$list));
}

die("Usage: $0 [debug|info|warn|error]\n") unless !@ARGV || @ARGV == 1 && $ARGV[0] =~ /^(debug|info|warn|error)$/;

my $url = 'http://37.139.2.74/api/points';
my $log = Mojo::Log->new(level => $ARGV[0] // 'info');
my $ua  = Mojo::UserAgent->new;

while (1) {
   my $tx = $ua->get($url);
   die(sprintf("Woops, get failed with %i\n", $tx->res->code)) unless $tx->res->code == 200;
   my $input = $tx->res->json;
   $log->info('Token: ' . $input->{token});
   $log->info(list_text('Input', $input->{points}));
   my $sl = ScoreList->new(frames => $input->{points});
   $log->debug(list_text('Frame scores', $sl->frame_scores));
   $log->info(list_text('Scores', $sl->scores));
   my $msg = $sl->check;
   $log->warn($msg, list_text('Input', $input->{points})) if $msg;
   $tx = $ua->post($url, form => {token  => $input->{token}, points => encode_json($sl->scores)});
   die(sprintf("Woops, post failed with %i\n", $tx->res->code)) unless $tx->res->code == 200;
   if ($tx->res->json->{success}) {
      $log->info('Posted data was accepted');
   } elsif ($msg) {
      $log->info('Posted data was not accepted');
   } else {
      $log->error(
         'Posted data was not accepted',
         'Token: ' . $input->{token},
         list_text('Input', $input->{points}),
         list_text('Frame scores', $sl->frame_scores),
         list_text('Scores', $sl->scores)
      );
   }
}
